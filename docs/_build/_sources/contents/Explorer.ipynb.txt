{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import molsysmt as msm\n",
    "import openexplorer as oe\n",
    "import numpy as np\n",
    "from simtk import unit\n",
    "from simtk.openmm import app"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Explorer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "modeller = msm.convert('alanine_dipeptide.pdb', to_form='openmm.Modeller')\n",
    "\n",
    "topology = modeller.topology\n",
    "positions = modeller.positions\n",
    "\n",
    "forcefield = app.ForceField('amber10.xml', 'amber10_obc.xml')\n",
    "system = forcefield.createSystem(topology, constraints=app.HBonds, nonbondedMethod=app.NoCutoff)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "explorer = oe.Explorer(topology, system, platform='CUDA')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "explorer.set_coordinates(positions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=-396.6264186618646, unit=kilojoule/mole)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explorer.get_energy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=array([-133.44738623,  -54.32332039,   -0.50034583, ...,  -30.63325095,\n",
       "        -39.73797266,   48.88874352]), unit=kilojoule/(nanometer*mole))"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explorer.get_gradient()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=array([[ 5.05388856e+04,  1.06894011e+03, -1.09963119e+00, ...,\n",
       "        -2.23159790e+00,  3.86238098e-01,  1.07139349e+00],\n",
       "       [ 1.06894011e+03,  1.79112434e+03, -5.13926148e+00, ...,\n",
       "         2.38418579e-01, -5.19275665e+00,  2.84999609e+00],\n",
       "       [-1.09963119e+00, -5.13926148e+00,  3.64227613e+04, ...,\n",
       "        -4.78997827e-01, -8.01384449e-01, -2.99297273e+00],\n",
       "       ...,\n",
       "       [-2.23159790e+00,  2.38418579e-01, -4.78997827e-01, ...,\n",
       "         2.86250627e+04, -7.06076391e+03,  1.33075447e+04],\n",
       "       [ 3.86238098e-01, -5.19275665e+00, -8.01384449e-01, ...,\n",
       "        -7.06076391e+03,  4.21210581e+04,  1.26333497e+04],\n",
       "       [ 1.07139349e+00,  2.84999609e+00, -2.99297273e+00, ...,\n",
       "         1.33075447e+04,  1.26333497e+04,  1.29987460e+04]]), unit=kilojoule/(nanometer**2*mole))"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explorer.get_hessian()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "explorer.quench(minimizer='L-BFGS', tolerance=1.0*unit.kilojoule_per_mole/unit.nanometer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=array([ -2.6720703 , -17.7814756 ,  31.40774065, ...,   2.73211718,\n",
       "       -47.47397411,  59.22421205]), unit=kilojoule/(nanometer*mole))"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explorer.get_gradient()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "explorer.quench(minimizer='FIRE', tolerance=1.0*unit.kilojoule_per_mole/unit.nanometer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=array([ -2.6720703 , -17.7814756 ,  31.40774065, ...,   2.73211718,\n",
       "       -47.47397411,  59.22421205]), unit=kilojoule/(nanometer*mole))"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explorer.get_gradient()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "explorer.quench(minimizer='gradient_descent', tolerance=0.1*unit.kilojoule_per_mole)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=array([ -2.59570214, -17.6058256 ,  31.519234  , ...,   2.75885296,\n",
       "       -47.44130838,  59.25110096]), unit=kilojoule/(nanometer*mole))"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explorer.get_gradient()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
